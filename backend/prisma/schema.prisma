// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String?
  password   String?
  isAdmin    Boolean    @default(false)
  isVerified Boolean    @default(false)
  workflows  Workflow[]
  createdAt  DateTime   @default(now())
}

model Workflow {
  id          String      @id @default(uuid())
  name        String
  description String?
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  nodes       Node[]
  connections Connection[]
  executions  Execution[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Node {
  id         String   @id @default(uuid())
  workflow   Workflow @relation(fields: [workflowId], references: [id])
  workflowId String
  type       String    // e.g., "llm", "prompt", "tool", etc.
  config     Json
  positionX  Float
  positionY  Float
  createdAt  DateTime  @default(now())
}

model Connection {
  id        String  @id @default(uuid())
  workflow  Workflow @relation(fields: [workflowId], references: [id])
  workflowId String
  fromNodeId String
  toNodeId   String
}

model Execution {
  id          String     @id @default(uuid())
  workflow    Workflow   @relation(fields: [workflowId], references: [id])
  workflowId  String
  status      String     // e.g., "running", "completed", "failed"
  startedAt   DateTime   @default(now())
  finishedAt  DateTime?
  logs        Json?
}